version: '3.1'

services:
  Postgres:
    image: postgres
    container_name: Postgres
    restart: always
    environment:
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: usuario
      POSTGRES_DB: appchat
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgr" ]
      interval: 5s
      timeout: 5s
      retries: 5

  WebAppBackend:
    image: smagarinos89/wild-backend-prj01
    container_name: WebAppBackend
    environment:
      PORT: 3001
      DB_PASSWORD: usuario
      DB_USER: usuario
      DB_HOST: Postgres
      DB_NAME: appchat
      URLCORSAPI: "https://wildapi.smag.ar/"
      #DB_DEPLOY: postgresql://usuario:Postgres:5432/appchat
    ports:
      - "3001:3001"
    depends_on:
      Postgres:
        condition: service_healthy

  WebAppFrontend:
    image: smagarinos89/wild-frontend-prj01
    container_name: WebAppFrontend
    environment:
      PORT: 3001
      DB_PASSWORD: usuario
      DB_USER: usuario
      DB_HOST: Postgres
      DB_NAME: appchat
      URLCORSAPI: "https://wildprj01.smag.ar/"
      #DB_DEPLOY: postgresql://usuario:Postgres:5432/appchat
    ports:
      - "8080:8080"
    depends_on:
      WebAppBackend:
        condition: service_started

  AdminSQL:
    image: adminer
    restart: always
    ports:
      - 9000:8080
